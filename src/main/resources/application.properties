spring.datasource.url=jdbc:mysql://localhost:3306/PayMyBuddyProd
spring.datasource.username=root
spring.datasource.password=MySqlOracle1.
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.show-sql = true

spring.datasource.name=PayMyBuddyProd
#spring.datasource.driver-class-name= com.mysql.jdbc.Driver spring.jpa.database=mysql


# generation in conjugation with script-based schema creation and data population
# defer the initialization of our data source
#spring.jpa.defer-datasource-initialization=true
# script-based initialization
#spring.sql.init.mode=always
# script-based schema generation is performed using schema.sql.
#spring.jpa.hibernate.ddl-auto=none

# Updates the schema based on the diff schema.sql
spring.jpa.hibernate.ddl-auto=update





spring.thymeleaf.cache=false
spring.thymeleaf.mode=LEGACYHTML5
#Thymeleaf recupere immediatement les modeles modifie
#spring.thymeleaf.templates_root=file:///${user.dir}/src/main/resources/templates/
spring.thymeleaf.templates_root=src/main/resources/templates/
#spring.thymeleaf.prefix==/templates/

# Allowing using PUT, DELETE
spring.mvc.hiddenmethod.filter.enabled=true

# static content from filesystem first, too
#
spring.web.resources.static-locations[0]=file:src/main/resources/static/
spring.web.resources.static-locations[1]=classpath:/static

logging.level.root=error
logging.level.com.paymybuddy=info

# Gmail SMTP server
#spring.mail.host=smtp.gmail.com
#spring.mail.port=587
#spring.mail.username=username
#spring.mail.password=password
#spring.mail.properties.mail.smtp.auth=true

# Free SMTP server
#	port 25 : smtp sans authentification + smtp STARTTLS
#	port 465 : smtp SSL
#	port 587 : smtp STARTTLS
spring.mail.host=smtp.free.fr
spring.mail.port=25
spring.mail.properties.mail.smtp.auth=false

# TLS
spring.mail.properties.mail.smtp.starttls.enable=true
